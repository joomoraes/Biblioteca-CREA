// <auto-generated />
using System;
using LibraryCrea.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryCrea.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220214142809_migrationsss")]
    partial class migrationsss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryCrea.Domain.Entities.CadastroCategoriaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CadastroCategoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f14a5b01-4d1c-40c9-817c-c86f52933498"),
                            Ativo = true,
                            CreateAt = new DateTime(2022, 2, 14, 14, 28, 8, 761, DateTimeKind.Utc).AddTicks(6295),
                            Name = "Terror"
                        });
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.CadastroLivroEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Ano")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Edicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.ToTable("CadastroLivro", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f3cf61a-fc9a-4840-bd6c-94e48a9884f9"),
                            Ano = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6550),
                            AutorId = new Guid("0372a26c-f8b8-41d9-92c9-e43e492a1278"),
                            CategoriaId = new Guid("f14a5b01-4d1c-40c9-817c-c86f52933498"),
                            CreateAt = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6563),
                            Edicao = "Feira de São Paulo",
                            Editora = "Abril",
                            ISBN = "123456789",
                            Titulo = "Zumbies",
                            situacao = 0
                        });
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.DadosParaContato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PessoaEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tel")
                        .HasColumnType("int");

                    b.Property<int>("tipoTel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaEntityId");

                    b.ToTable("DadosParaContato");
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.MovimentcaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Devolucao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LivroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MaxDevolucacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PessoaEmprestimoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PessoaResponsavelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("situacaoEmprestimo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("Movimentacao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fe1b8b3-b830-4503-b7ce-322613829359"),
                            CreateAt = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6604),
                            Devolucao = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6600),
                            LivroId = new Guid("7f3cf61a-fc9a-4840-bd6c-94e48a9884f9"),
                            MaxDevolucacao = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6602),
                            PessoaEmprestimoId = new Guid("0372a26c-f8b8-41d9-92c9-e43e492a1278"),
                            PessoaResponsavelId = new Guid("0372a26c-f8b8-41d9-92c9-e43e492a1278"),
                            situacaoEmprestimo = 2
                        });
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.PessoaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RG")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0372a26c-f8b8-41d9-92c9-e43e492a1278"),
                            Ativo = true,
                            CPF = "000000000000",
                            CreateAt = new DateTime(2022, 2, 14, 10, 28, 8, 761, DateTimeKind.Local).AddTicks(6621),
                            Matricula = "0000000000",
                            Nome = "João",
                            RG = 11111111,
                            tipo = 0
                        });
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.CadastroLivroEntity", b =>
                {
                    b.HasOne("LibraryCrea.Domain.Entities.PessoaEntity", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryCrea.Domain.Entities.CadastroCategoriaEntity", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.DadosParaContato", b =>
                {
                    b.HasOne("LibraryCrea.Domain.Entities.PessoaEntity", null)
                        .WithMany("dadosParaContato")
                        .HasForeignKey("PessoaEntityId");
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.MovimentcaoEntity", b =>
                {
                    b.HasOne("LibraryCrea.Domain.Entities.CadastroLivroEntity", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LibraryCrea.Domain.Entities.PessoaEntity", b =>
                {
                    b.Navigation("dadosParaContato");
                });
#pragma warning restore 612, 618
        }
    }
}
